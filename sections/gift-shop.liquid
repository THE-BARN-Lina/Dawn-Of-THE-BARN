{{ 'template-collection.css' | asset_url | stylesheet_tag }}
{{ 'component-loading-overlay.css' | asset_url | stylesheet_tag }}
{{ 'component-card.css' | asset_url | stylesheet_tag }}
{{ 'component-price.css' | asset_url | stylesheet_tag }}

{%- if section.settings.enable_quick_add -%}
  <link
    rel="stylesheet"
    href="{{ 'quick-add.css' | asset_url }}"
    media="print"
    onload="this.media='all'">
  <script src="{{ 'quick-add.js' | asset_url }}" defer="defer"></script>
  <script src="{{ 'product-form.js' | asset_url }}" defer="defer"></script>
{%- endif -%}
<noscript>{{ 'component-rte.css' | asset_url | stylesheet_tag }}</noscript>

{%- style -%}
  :root  {
    --brown-clear: #8d7149;
    --white: #ffffff;
    --black: #000000;
    --green: #15aa27;
    --orange:#b26119;
  }
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}
    px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}
    px;
  }
  .section-category-container {
    display: flex;
    flex-direction: column;
    text-align: center;
    align-items: center;
    justify-content: center;
    width: 100%;
    height: 100px;
    /* background-color: purple; */
    margin-top: -10px;
  }
  .scroll-wrapper {
    overflow: hidden; /* Hide any horizontal overflow */
  }
  .scroll-container {
    display: flex;
    flex-direction:column;
    align-items:center;
    justify-content:flex-start;
    width: 100%;
    overflow-x: auto; /* Enable horizontal scrolling */
  }
  .filter-buttons {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 100%;
    padding:4px;
    overflow-x: auto; /* Enable horizontal scrolling */
  }
  .filter-button {
    /* Common button styles */
    padding: 8px 16px;
    transition: background-color 0.3s;
    font-size:16px;
    min-width: 140px;


    background-color: var(--black);
    border-radius: 2px;
    color: var(--white);
    cursor: pointer;
    border: 1px solid;
    margin-right:1.2rem;
  }
  .filter-button[data-tag="All"] {
    border-color: white;
  }
  .filter-button[data-tag="Balanced"] {
      border-color: var(--brown-clear); 
  }
  .filter-button[data-tag="Terroir"] {
      border-color: var(--green);
  } 
  .filter-button.active {
      outline-offset: 3px;
  }
  .filter-button[data-tag="All"].active {
    outline: 0.2px solid var(--white);
    background-color: var(--white);
    color: var(--black);  
  }
  .filter-button[data-tag="Balanced"].active {
    outline: 0.2px solid var(--brown-clear);
    background-color: var(--brown-clear); 
    color: var(--white);  
  }
  .filter-button[data-tag="Terroir"].active {
    outline: 0.2px solid var(--green);
    background-color: var(--green); 
    color: var(--white);  
  }
  /* Styles for sections */
  .section-collection {
    display: none;
  }
  .section-collection.visible {
    display: block;
  }
  .grid__item[style*="display: none"] {
    display: none !important;
  }
  /* Additional styles for smaller screens */
  @media screen and (max-width: 1000px) {
    .filter-buttons {
      display: flex;
      align-items: center;
      justify-content: flex-start;
      margin-bottom:1rem;
    }
    .filter-button{
      margin-right:2rem;
    }
  }
{%- endstyle -%}

<!-- Styles -->
<style>
  /* Padding for the section */
  .section-{{ section.id }}-padding {
    padding-top: calc({{ section.settings.padding_top }}px * 0.75);
    padding-bottom: calc({{ section.settings.padding_bottom }}px  * 0.75);
  }

  /* Container for custom columns */
  .custom-columns-container {
    display: flex;
    flex-wrap: nowrap;
    overflow-x: auto;
    padding: 15px 17px 15px 0px;
  }

  /* Individual column link */
  .custom-column-link {
    display: inline-flex;
    flex-shrink: 0;
    transition: background-color 0.3s ease-in-out;
    border-radius: 4px;
    cursor: pointer;
    padding: 16px 8px;
    margin-right: 0px; /* Spacing between columns */
  }

  .custom-column-link:not(:last-child) {
    margin-right: 0px;
  }

  .custom-column-content {
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  /* Card image within the column link */
  .multicolumn-card__image {
    width: 100px;
    height: 100px;
    margin-bottom: 14px;
    padding: 5px;
    border: 1px solid transparent;
    border-radius: 50%; /* Make it a circle */
    transition: border 0.2s ease-in-out, transform 0.2s ease-in;
  }

  /* Hover effect for column link */
  .custom-column-link:hover .multicolumn-card__image {
    border: 1.5px solid #ffffff; /* Make the border slightly thicker */
  }

  .custom-column-link:hover {
    background-color: #1c1d1c;
    transform: scale(1.05); /* Slightly enlarge the entire link */
    border-radius: 10px;
  }

  /* Title within the column link */
  .sub-collections__item-title {
    font-size: 16px;
    font-weight: 500;
    line-height: 24px;
    min-width: 116px;
    max-width: 116px;
    text-align: center;
    margin-top: -4px;
    margin-bottom: 0px;
  }

  /* Remove underline on hover for all links */
  a {
    text-decoration: none !important;
  }
  
  a:hover {
    text-decoration: none !important;
  }

  /* Media query for larger screens */
  @media (min-width: 769px) {
    .custom-columns-container {
      flex-flow: row wrap;
      justify-content: center;
      padding: 0 30px 0 30px;
      /*margin-top: 40px;*/
      overflow-x: visible;
    }

    .custom-column-link:not(:last-child) {
      margin-right: 8px;
    }

    .custom-column-link {
      margin-right: 27px; /* Adjust spacing for larger screens */
      text-align: center;
    }

    .multicolumn-card__image {
      width: 111px;
      height: 111px;
      margin-bottom: 14px;
    }

    .sub-collections__item-title {
      font-size: 16px;
      font-weight: 500;
      line-height: 24px;
      min-width: 116px;
      max-width: 116px;
      margin-bottom: 0px;
    }
  }
      .media img {
 
  background-color:#1C1D1C;
}
</style>

<div class=" section-{{ section.id }}-padding">
  <div class="custom-columns-container">
    {% for block in section.blocks %}
      <a href="{{ block.settings.button_link }}" class="custom-column-link">
        <div class="custom-column-content">
          <img class="multicolumn-card__image"
            srcset="{%- if block.settings.image.width >= 275 -%}{{ block.settings.image | image_url: width: 275 }} 275w,{%- endif -%}
            {%- if block.settings.image.width >= 550 -%}{{ block.settings.image | image_url: width: 550 }} 550w,{%- endif -%}
            {%- if block.settings.image.width >= 710 -%}{{ block.settings.image | image_url: width: 710 }} 710w,{%- endif -%}
            {%- if block.settings.image.width >= 1420 -%}{{ block.settings.image | image_url: width: 1420 }} 1420w,{%- endif -%}
            {{ block.settings.image | image_url }} {{ block.settings.image.width }}w"
            src="{{ block.settings.image | image_url: width: 550 }}"
            sizes="(min-width: 320px) 320px,(min-width: 425px) 425px,(min-width: 768px) 768px"
            {% if section.blocks.size <= 2 %}710px{% else %}550px{% endif %},
            (min-width: 750px) {% if section.blocks.size == 1 %}710px{% else %}550px{% endif %},
            calc(100vw - 30px)
            alt="{{ block.settings.image.alt }}"
            height="{{ block.settings.image.height }}"
            width="{{ block.settings.image.width }}"
            loading="lazy">
          <h3 class="sub-collections__item-title">{{ block.settings.button_text }}</h3>
        </div>
      </a>
    {% endfor %}
  </div>
</div>


<div class="scroll-wrapper" style="">
  <div class="scroll-container">
    <div class="filter-buttons">
      <button
      onclick="filterByTag('All')"
      class="filter-button active"
      data-tag="All">All</button>
    
    <button
      onclick="filterByTag('Gifts_Beans_and_Bundles')"
      class="filter-button"
      data-tag="Gifts_Beans_and_Bundles"
      style="min-width: 180px;"
      
      >Beans and Bundles</button>
    
    <button
      onclick="filterByTag('Gifts_Coffee_Voucher')"
      class="filter-button"
      data-tag="Gifts_Coffee-Voucher"
      style="min-width: 160px;"
      
      >Coffee Voucher</button>

      <button
      onclick="filterByTag('Gifts_Equipment')"
      class="filter-button"
      data-tag="Gifts_Equipment">Equipment</button>

      <button
      onclick="filterByTag('Gifts_Subscription')"
      class="filter-button"
      data-tag="Gifts_Subscription">Subscription</button>


      <button
      onclick="filterByTag('Gifts_Merch')"
      class="filter-button"
      data-tag="Gifts_Merch">Merch</button>
    
    </div>
  </div>
</div>

<div class="section-{{ section.id }}-padding main-container-espresso">
  {% comment %} Sort is the first tabbable element when filter type is vertical {% endcomment %}
  {%- if section.settings.enable_sorting and section.settings.filter_type == 'vertical' -%}
    <facet-filters-form class="facets facets-vertical-sort  small-hide no-js-hidden">
      <form class="facets-vertical-form" id="FacetSortForm">
        <div class="facet-filters sorting caption">
          <div class="facet-filters__field">
            <h2 class="facet-filters__label caption-large text-body">
              <label for="SortBy">{{ 'products.facets.sort_by_label' | t }}</label>
            </h2>
            <div class="select">
              {%- assign sort_by = collection.sort_by | default: collection.default_sort_by -%}
              <select name="sort_by" class="facet-filters__sort select__select caption-large" id="SortBy" aria-describedby="a11y-refresh-page-message">
                {%- for option in collection.sort_options -%}
                  <option value="{{ option.value | escape }}"{% if option.value == sort_by %} selected="selected"{% endif %}>{{ option.name | escape }}</option>
                {%- endfor -%}
              </select>
              {% render 'icon-caret' %}
            </div>
          </div>
          <noscript>
            <button type="submit" class="facets__button-no-js button button--secondary">{{ 'products.facets.sort_button' | t }}</button>
          </noscript>
        </div>

        <div class="product-count-vertical light" role="status">
          <h2 class="product-count__text text-body">
            <span id="ProductCountDesktop">
              {%- if collection.results_count -%}
                {{ 'templates.search.results_with_count' | t: terms: collection.terms, count: collection.results_count }}
              {%- elsif collection.products_count == collection.all_products_count -%}
                {{ 'products.facets.product_count_simple' | t: count: collection.products_count }}
              {%- else -%}
                {{ 'products.facets.product_count' | t: product_count: collection.products_count, count: collection.all_products_count }}
              {%- endif -%}
            </span>
          </h2>
          <div class="loading-overlay__spinner">
            <svg aria-hidden="true" focusable="false" role="presentation" class="spinner" viewBox="0 0 66 66" xmlns="http://www.w3.org/2000/svg">
              <circle class="path" fill="none" stroke-width="6" cx="33" cy="33" r="30"></circle>
            </svg>
          </div>
        </div>  
      </form>
    </facet-filters-form>
  {%- endif -%}

  <div class="{% if section.settings.filter_type == 'vertical' %} facets-vertical{% endif %}">
    {{ 'component-facets.css' | asset_url | stylesheet_tag }}
    <script src="{{ 'facets.js' | asset_url }}" defer="defer"></script>
    {%- if section.settings.enable_filtering or section.settings.enable_sorting -%}
      <aside aria-labelledby="verticalTitle" class="facets-wrapper{% unless section.settings.enable_filtering %} facets-wrapper--no-filters{% endunless %}{% if section.settings.filter_type != 'vertical' %} {% endif %}" id="main-collection-filters" data-id="{{ section.id }}">
        {% render 'facets', results: collection, enable_filtering: section.settings.enable_filtering, enable_sorting: section.settings.enable_sorting, filter_type: section.settings.filter_type %}
      </aside>
    {%- endif -%}

    <div class="product-grid-container" id="ProductGridContainer">
      {%- paginate collection.products by section.settings.products_per_page -%}
        {%- if collection.products.size == 0 -%}
          <div class="collection collection--empty " id="product-grid" data-id="{{ section.id }}">
            <div class="loading-overlay gradient"></div>
            <div class="title-wrapper center">
              <h2 class="title title--primary">
                {{ 'sections.collection_template.empty' | t }}<br>
                {{ 'sections.collection_template.use_fewer_filters_html' | t: link: collection.url, class: "underlined-link link" }}
              </h2>
            </div>
          </div>
        {%- else -%}
          <div class="collection{% if section.settings.filter_type != 'vertical' %} {% endif %}">
            <div class="loading-overlay gradient"></div>
          
      
          
            <ul id="product-grid" data-id="{{ section.id }}" class="
              grid product-grid grid--{{ section.settings.columns_mobile }}-col-tablet-down
              grid--{{ section.settings.columns_desktop }}-col-desktop">
              {%- for product in collection.products -%}
                {% if product.tags contains "Gifts_Beans_and_Bundles" or product.tags contains "Gifts_Coffee_Voucher" or product.tags contains "Gifts_Equipment" or product.tags contains "Gifts_Subscription" or product.tags contains "Gifts_Merch" %}


                    {% assign lazy_load = false %}
                    {%- if forloop.index > 2 -%}
                      {%- assign lazy_load = true -%}
                    {%- endif -%}
                    <li class="grid__item" data-tags="{{ product.tags | join: ',' }}">
                      {% render 'card-product',
                        card_product: product,
                        media_aspect_ratio: section.settings.image_ratio,
                        show_secondary_image: section.settings.show_secondary_image,
                        show_vendor: section.settings.show_vendor,
                        show_rating: section.settings.show_rating,
                        lazy_load: lazy_load,
                        show_quick_add: section.settings.enable_quick_add,
                        section_id: section.id,

                        show_tastenotes: section.settings.show_tastenotes
    
                      %}
                    </li>

                  {% endif %}


              
              {%- endfor -%}
            </ul>          
            
            {%- if paginate.pages > 1 -%}
              {% render 'pagination', paginate: paginate, anchor: '' %}
            {%- endif -%}
          </div>
        {%- endif -%}
      {%- endpaginate -%}
    </div>
  </div>
</div>


<script>
    function filterByTag(tag) {
        // Define a map of translations or synonymous tags
        const tagTranslations = {
            'Balanced': ['Balanced', 'Ausgebowen'],
            'Exotic': ['Exotic', 'Exotisch']
        };

        // Deactivate currently active button
        var activeButtons = document.querySelectorAll('.filter-button.active');
        for (var i = 0; i < activeButtons.length; i++) {
            activeButtons[i].classList.remove('active');
        }

        // Activate clicked button
        var buttons = document.querySelectorAll('.filter-button[data-tag="' + tag + '"]');
        for (var i = 0; i < buttons.length; i++) {
            buttons[i].classList.add('active');
        }

        // Filter products based on tags
        var products = document.querySelectorAll('.grid__item');
        for (var i = 0; i < products.length; i++) {
            if (tag == 'All') {
                products[i].style.display = '';  // Show all products
            } else {
                var productTags = products[i].getAttribute('data-tags').split(',');
                var matchedTags = tagTranslations[tag] || [tag]; // get from translations map or default to the passed tag
                if (productTags.some(tag => matchedTags.includes(tag))) {
                    products[i].style.display = '';  // Show product with matching tag
                } else {
                    products[i].style.display = 'none';  // Hide non-matching products
                }
            }
        }
    }
</script>

<!-- JavaScript -->
<script>
  document.addEventListener("DOMContentLoaded", function () {
    var customColumns = document.querySelectorAll(".custom-column-link");
    var activeColumnIndex = localStorage.getItem("activeColumnIndex");

    customColumns.forEach(function (column, index) {
      column.addEventListener("mouseenter", function () {
        // Add the "hover" class on hover
        column.classList.add("hover");
      });

      column.addEventListener("mouseleave", function () {
        // Remove the "hover" class when the mouse leaves
        column.classList.remove("hover");
      });

      column.addEventListener("click", function () {
        // Remove the "active" class from all columns
        customColumns.forEach(function (col) {
          col.classList.remove("active");
        });

        // Add the "active" class to the clicked column
        column.classList.add("active");

        // Store the clicked column's index in local storage
        localStorage.setItem("activeColumnIndex", index);
      });

      // Initially remove the "hover" class from all columns
      column.classList.remove("hover");

      // Initially remove the "active" class from all columns
      column.classList.remove("active");
    });

    // Add the "active" class to the column based on the stored index
    if (activeColumnIndex !== null) {
      customColumns[activeColumnIndex].classList.add("active");
    }
  });
</script>



{% schema %}
  {
    "name": "Gift Shop",
    "class": "section",
    "settings": [
      {
        "type": "range",
        "id": "products_per_page",
        "min": 8,
        "max": 64,
        "step": 4,
        "default": 16,
        "label": "t:sections.main-collection-product-grid.settings.products_per_page.label"
      },
      {
        "type": "range",
        "id": "columns_desktop",
        "min": 1,
        "max": 5,
        "step": 1,
        "default": 4,
        "label": "t:sections.main-collection-product-grid.settings.columns_desktop.label"
      },
      {
        "type": "header",
        "content": "t:sections.main-collection-product-grid.settings.header__3.content"
      },
      {
        "type": "select",
        "id": "image_ratio",
        "options": [
          {
            "value": "adapt",
            "label": "t:sections.main-collection-product-grid.settings.image_ratio.options__1.label"
          }, {
            "value": "portrait",
            "label": "t:sections.main-collection-product-grid.settings.image_ratio.options__2.label"
          }, {
            "value": "square",
            "label": "t:sections.main-collection-product-grid.settings.image_ratio.options__3.label"
          }
        ],
        "default": "adapt",
        "label": "t:sections.main-collection-product-grid.settings.image_ratio.label"
      }, {
        "type": "checkbox",
        "id": "show_secondary_image",
        "default": false,
        "label": "t:sections.main-collection-product-grid.settings.show_secondary_image.label"
      }, {
        "type": "checkbox",
        "id": "show_vendor",
        "default": false,
        "label": "t:sections.main-collection-product-grid.settings.show_vendor.label"
      }, {
        "type": "checkbox",
        "id": "show_tastenotes",
        "default": false,
        "label": "Show Tastenote or Tagline"
      }, {
        "type": "checkbox",
        "id": "show_rating",
        "default": false,
        "label": "t:sections.main-collection-product-grid.settings.show_rating.label",
        "info": "t:sections.main-collection-product-grid.settings.show_rating.info"
      }, {
        "type": "checkbox",
        "id": "enable_quick_add",
        "default": false,
        "label": "t:sections.main-collection-product-grid.settings.enable_quick_buy.label"
      }, {
        "type": "color",
        "id": "quick_add_button_color",
        "label": "Quick Add Button Color"
      }, {
        "type": "header",
        "content": "t:sections.main-collection-product-grid.settings.header__1.content"
      },
          {
      "type": "checkbox",
      "id": "enable_filtering",
      "default": true,
      "label": "t:sections.main-collection-product-grid.settings.enable_filtering.label",
      "info": "t:sections.main-collection-product-grid.settings.enable_filtering.info"
    },
    {
      "type": "select",
      "id": "filter_type",
      "options": [
        {
          "value": "horizontal",
          "label": "t:sections.main-collection-product-grid.settings.filter_type.options__1.label"
        },
        {
          "value": "vertical",
          "label": "t:sections.main-collection-product-grid.settings.filter_type.options__2.label"
        },
        {
          "value": "drawer",
          "label": "t:sections.main-collection-product-grid.settings.filter_type.options__3.label"
        }
      ],
      "default": "horizontal",
      "label": "t:sections.main-collection-product-grid.settings.filter_type.label",
      "info": "t:sections.main-collection-product-grid.settings.filter_type.info"
    },
    {
      "type": "checkbox",
      "id": "enable_sorting",
      "default": true,
      "label": "t:sections.main-collection-product-grid.settings.enable_sorting.label"
    },
      {
        "type": "header",
        "content": "t:sections.main-collection-product-grid.settings.header_mobile.content"
      }, {
        "type": "select",
        "id": "columns_mobile",
        "default": "2",
        "label": "t:sections.main-collection-product-grid.settings.columns_mobile.label",
        "options": [
          {
            "value": "1",
            "label": "t:sections.main-collection-product-grid.settings.columns_mobile.options__1.label"
          }, {
            "value": "2",
            "label": "t:sections.main-collection-product-grid.settings.columns_mobile.options__2.label"
          }
        ]
      }, {
        "type": "header",
        "content": "t:sections.all.padding.section_padding_heading"
      }, {
        "type": "range",
        "id": "padding_top",
        "min": 0,
        "max": 100,
        "step": 4,
        "unit": "px",
        "label": "t:sections.all.padding.padding_top",
        "default": 36
      }, {
        "type": "range",
        "id": "padding_bottom",
        "min": 0,
        "max": 100,
        "step": 4,
        "unit": "px",
        "label": "t:sections.all.padding.padding_bottom",
        "default": 36
      }
    ],
    "blocks": [
    {
      "type": "custom_column",
      "name": "Custom Column",
      "settings": [
        {
          "type": "image_picker",
          "label": "Image",
          "id": "image"
        },
        {
          "type": "text",
          "label": "Button Text",
          "id": "button_text",
          "default": "Learn More"
        },
        {
          "type": "url",
          "label": "Button Link",
          "id": "button_link"
        }
      ]
    }
  ],
    "presets": [
      {
        "name": "Gift Shop",
        "category": "Custom"
      }

    ],
    "templates": ["collection"]
  }
{% endschema %}