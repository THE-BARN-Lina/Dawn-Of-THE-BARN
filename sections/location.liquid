<style>
  .location-container {
  display: flex;
  flex-wrap: wrap; 
  justify-content: space-between;
}

.location-item {
  flex-basis: calc(100% - 20px); /* Full width minus a bit of margin */
  margin: 10px; /* Add some space around each item */
}

.location-item .image-container-location {
  position: relative; /* Makes the text positioning relative to this container */
  display: inline-block; /* Wraps the container around the image */
}

.location-item .text-overlay {
  position: absolute; /* Positions the text relative to the nearest positioned ancestor */
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%); /* Centers the text exactly in the middle */
  color: #fff; 
  text-align: center;
}

/* background to the text to make it more readable */
.location-item .text-overlay {
  background-color: rgba(0, 0, 0, 0.3); /* Black background with 30% opacity */
  padding: 10px;
}

  .image-container-location {
  position: relative;
  display: inline-block; 
  width: 100%;
  padding-top: 56.25%; /* 16:9 Aspect Ratio */
  background-position: center; 
  background-repeat: no-repeat; 
  background-size: cover;
  overflow: hidden; 
}

.image-container-location img {
  position: absolute; 
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  object-fit: cover;
  object-position: center; 
}

/* Set the basis to 48% for screens larger than 990px, meaning two items per row */
@media only screen and (min-width: 990px) {
  .location-item {
    flex-basis: calc(48% - 20px);
  }
}

@media only screen and (min-width: 990px) {
  
  }
</style>

<div class="location-container">
  {% for location in shop.metaobjects.location.values %}
    <div class="location-item">
      <div class="image-container-location">
        <img src="{{ location.image | img_url:'500x' }}" alt="location" loading="lazy" width='' height=''>
        <div class="text-overlay">
          <h2 class="location-name">{{ location.name }}</h2>
          <p class="location-address">{{ location.address }}</p>
        </div>
      </div>
    </div>
  {% endfor %}
</div>

<script>

</script>



{% schema %}
  {
    "name": "Location",
    "presets": [{
        "name": "Location",
        "category": "Text"
  }]
  }
{% endschema %}